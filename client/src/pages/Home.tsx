import React, { useState, useEffect, ReactElement } from 'react';

import { Loader, Card, FormField } from '../components';

const RenderCards = ({
  data,
  title,
}: {
  data: any[];
  title: string;
}): ReactElement => {
  if (data.length > 0) {
    // @ts-ignore
    return data.map((post) => (
      <div key={post._id}>
        <Card {...post} />
      </div>
    ));
  }

  return (
    <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>{title}</h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState<any[]>([]);
  const [searchText, setSearchText] = useState('');
  const [searchTimeout, setSearchTimeout] = useState<any>(null);
  const [searchedResults, setSearchedResults] = useState<any[]>([]);
  const backendUrl = import.meta.env.VITE_BACKEND_URL;

  useEffect(() => {
    const fetchAllPosts = async () => {
      setLoading(true);

      try {
        const response = await fetch(`${backendUrl}/api/v1/post`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          },
        });

        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };

    fetchAllPosts();
  }, []);

  const handleSearchChange = (e: any) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter(
          (post) =>
            post.name.toLowerCase().includes(searchText.toLowerCase()) ||
            post.prompt.toLowerCase().includes(searchText.toLowerCase())
        );

        setSearchedResults(searchResults);
      }, 500)
    );
  };

  return (
    <section>
      <h1 className='font-extrabold text-[#222328] text-[32px]'>
        The Community Showcase
      </h1>
      <p className='mt-2 text-[#666e75] text-[16px] max-w-[500px]'>
        Browse through a collection of imaginative and visually stunning images
        generated by DALL-E AI
      </p>

      <div className='mt-16'>
        <FormField
          labelName='Search Posts'
          type='text'
          name='text'
          placeholder='Search posts'
          value={searchText}
          onChange={handleSearchChange}
        />
      </div>

      <div className='mt-10'>
        {loading ? (
          <div className='flex justify-center items-center'>
            <Loader />
          </div>
        ) : (
          <>
            {searchText ? (
              <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                Showing results for{' '}
                <span className='text-[#222328]'>{searchText}</span>
              </h2>
            ) : (
              <></>
            )}
            <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title='No search results found'
                />
              ) : (
                <RenderCards data={allPosts} title='No posts found' />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
